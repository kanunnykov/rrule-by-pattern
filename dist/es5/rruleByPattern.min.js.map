{"version":3,"sources":["webpack://rruleByPattern/webpack/universalModuleDefinition","webpack://rruleByPattern/webpack/bootstrap","webpack://rruleByPattern/external \"rrule\"","webpack://rruleByPattern/./src/rrulesetbuilder.ts","webpack://rruleByPattern/./src/readablerrulesetbuilder.ts","webpack://rruleByPattern/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://rruleByPattern/./node_modules/date-fns/esm/toDate/index.js","webpack://rruleByPattern/./node_modules/date-fns/esm/startOfYear/index.js","webpack://rruleByPattern/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://rruleByPattern/./node_modules/date-fns/esm/startOfDay/index.js","webpack://rruleByPattern/./node_modules/date-fns/esm/differenceInCalendarDays/index.js","webpack://rruleByPattern/./node_modules/date-fns/esm/getDayOfYear/index.js","webpack://rruleByPattern/./src/shortrrulesetbuilder.ts"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rruleSet","pattern","count","_limit","countOfOneInPattern","reduce","prev","curr","limit","Math","floor","length","iterator","date","build","builedRRuleSet","clone","dates","all","Number","exdate","RRuleSetBuilder","requiredArgs","required","args","TypeError","toDate","argument","arguments","argStr","toString","Date","getTime","console","warn","Error","stack","NaN","startOfYear","dirtyDate","cleanDate","setFullYear","getFullYear","setHours","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","ceil","getTimezoneOffset","setSeconds","startOfDay","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","getDayOfYear","diff","dayOfYear","dayIndexesByYearAndTime","yearAndTime","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","push","split","year","hours","minutes","seconds","rrule","freq","YEARLY","dtstart","UTC","until","byweekday","MO","TU","WE","TH","FR","SA","SU","bysetpos"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,UACR,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,SAAUJ,GACQ,iBAAZC,QACdA,QAAwB,eAAID,EAAQG,QAAQ,UAE5CJ,EAAqB,eAAIC,EAAQD,EAAY,OAR/C,CASmB,oBAATO,KAAuBA,KAAOC,MAAM,SAASC,GACvD,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUV,QAGnC,IAAIC,EAASO,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHZ,QAAS,IAUV,OANAa,EAAQH,GAAUI,KAAKb,EAAOD,QAASC,EAAQA,EAAOD,QAASS,GAG/DR,EAAOW,GAAI,EAGJX,EAAOD,QA0Df,OArDAS,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASjB,EAASkB,EAAMC,GAC3CV,EAAoBW,EAAEpB,EAASkB,IAClCG,OAAOC,eAAetB,EAASkB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASzB,GACX,oBAAX0B,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAetB,EAAS0B,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAetB,EAAS,aAAc,CAAE4B,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAASnC,GAChC,IAAIkB,EAASlB,GAAUA,EAAO8B,WAC7B,WAAwB,OAAO9B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAQ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,gBClFrDzC,EAAOD,QAAUO,G,iJCEjB,I,EAAA,aAMI,WAAYoC,EAAoBC,EAAqBC,GACjDvC,KAAKqC,SAAWA,EAChBrC,KAAKsC,QAAUA,EACftC,KAAKuC,MAAQA,EA0BrB,OArBI,sBAAc,oBAAK,C,IAAnB,WACI,GAAIvC,KAAKwC,OACL,OAAOxC,KAAKwC,OAGhB,IACMC,EADyBzC,KAAKsC,QACAI,QAChC,SAACC,EAAMC,GAAU,OAAOD,EAAOC,KAE7BC,EAAQC,KAAKC,MACf/C,KAAKuC,MAAQvC,KAAKsC,QAAQU,OAASP,GAKvC,OAFAzC,KAAKwC,OAASK,EAEPA,G,gCAGD,YAAAI,SAAV,sBACI,OAAO,SAACC,EAAY7C,GAAuB,OAAOA,EAAI,EAAKwC,QAEnE,EAnCA,G,oTCCA,2B,+CAuBA,OAvB6C,OAGlC,YAAAM,MAAP,WACI,GAAInD,KAAKoD,eACL,OAAOpD,KAAKoD,eAGhB,IAAMf,EAAWrC,KAAKqC,SAASgB,QACzBC,EAAQjB,EAASkB,IAAIvD,KAAKiD,YAEhC,IAAK,IAAM5C,KAAKiD,EACRtD,KAAKsC,QAAQkB,OAAOnD,GAAKL,KAAKsC,QAAQU,SAI1CX,EAASoB,OAAOH,EAAMjD,IAK1B,OAFAL,KAAKoD,eAAiBf,EAEfA,GAEf,EAvBA,CAA6CqB,GCH9B,SAASC,EAAaC,EAAUC,GAC7C,GAAIA,EAAKb,OAASY,EAChB,MAAM,IAAIE,UAAUF,EAAW,aAAeA,EAAW,EAAI,IAAM,IAAM,uBAAyBC,EAAKb,OAAS,YC8BrG,SAASe,EAAOC,GAC7BL,EAAa,EAAGM,WAChB,IAAIC,EAASnD,OAAOkB,UAAUkC,SAAS3D,KAAKwD,GAE5C,OAAIA,aAAoBI,MAA4B,iBAAbJ,GAAoC,kBAAXE,EAEvD,IAAIE,KAAKJ,EAASK,WACI,iBAAbL,GAAoC,oBAAXE,EAClC,IAAIE,KAAKJ,IAES,iBAAbA,GAAoC,oBAAXE,GAAoD,oBAAZI,UAE3EA,QAAQC,KAAK,+IAEbD,QAAQC,MAAK,IAAIC,OAAQC,QAGpB,IAAIL,KAAKM,MCxBL,SAASC,EAAYC,GAClCjB,EAAa,EAAGM,WAChB,IAAIY,EAAYd,EAAOa,GACnB1B,EAAO,IAAIkB,KAAK,GAGpB,OAFAlB,EAAK4B,YAAYD,EAAUE,cAAe,EAAG,GAC7C7B,EAAK8B,SAAS,EAAG,EAAG,EAAG,GAChB9B,EC7BT,SAAS+B,EAAwB/B,GAC/B,OAAOA,EAAKmB,UAHe,IAkBd,SAASa,EAAgCN,GACtD,IAAI1B,EAAO,IAAIkB,KAAKQ,EAAUP,WAC1Bc,EAAqBrC,KAAKsC,KAAKlC,EAAKmC,qBAIxC,OAHAnC,EAAKoC,WAAW,EAAG,GArBQ,IAwBpBH,GAFoBA,EAAqB,GAtBrB,IAuB6DF,EAAwB/B,IAvBrF,IAuBuH+B,EAAwB/B,ICE7J,SAASqC,EAAWX,GACjCjB,EAAa,EAAGM,WAChB,IAAIf,EAAOa,EAAOa,GAElB,OADA1B,EAAK8B,SAAS,EAAG,EAAG,EAAG,GAChB9B,ECUM,SAASsC,EAAyBC,EAAeC,GAC9D/B,EAAa,EAAGM,WAChB,IAAI0B,EAAiBJ,EAAWE,GAC5BG,EAAkBL,EAAWG,GAC7BG,EAAgBF,EAAetB,UAAYa,EAAgCS,GAC3EG,EAAiBF,EAAgBvB,UAAYa,EAAgCU,GAIjF,OAAO9C,KAAKiD,OAAOF,EAAgBC,GA7CX,OCuBX,SAASE,EAAapB,GACnCjB,EAAa,EAAGM,WAChB,IAAIf,EAAOa,EAAOa,GACdqB,EAAOT,EAAyBtC,EAAMyB,EAAYzB,IAClDgD,EAAYD,EAAO,EACvB,OAAOC,E,sVCvBT,2B,+CA8DA,OA9D0C,OAG/B,YAAA/C,MAAP,WACI,GAAInD,KAAKoD,eACL,OAAOpD,KAAKoD,eAGhB,IAAMf,EAAW,IAAI,WACfiB,EAAQtD,KAAKqC,SAASkB,IAAIvD,KAAKiD,YAC/BkD,EAAqD,GAE3D,IAAK,IAAM9F,KAAKiD,EAAO,CACnB,GAAKtD,KAAKsC,QAAQkB,OAAOnD,GAAKL,KAAKsC,QAAQU,SAIrCoD,EAAc9C,EAAMjD,GAAGgG,iBACvB,IAAM/C,EAAMjD,GAAGiG,cACf,IAAMhD,EAAMjD,GAAGkG,gBACf,IAAMjD,EAAMjD,GAAGmG,mBAEAL,IACjBA,EAAwBC,GAAe,IAG3CD,EAAwBC,GAAaK,KAAKT,EAAa1C,EAAMjD,KAGjE,IAAK,IAAM+F,KAAeD,EAAyB,CACzC,MAAkCC,EAAYM,MAAM,KAAnDC,EAAI,KAAEC,EAAK,KAAEC,EAAO,KAAEC,EAAO,KACpCzE,EAAS0E,MAAM,IAAI,QAAM,CACrBC,KAAM,QAAMC,OACZC,QAAS,IAAI9C,KACTA,KAAK+C,IACD3D,OAAOmD,GACP,EACA,EACAnD,OAAOoD,GACPpD,OAAOqD,GACPrD,OAAOsD,KAEfM,MAAO,IAAIhD,KACPA,KAAK+C,IAAI3D,OAAOmD,GAAO,GAAI,GAAI,GAAI,GAAI,GAAI,MAE/CU,UAAW,CACP,QAAMC,GACN,QAAMC,GACN,QAAMC,GACN,QAAMC,GACN,QAAMC,GACN,QAAMC,GACN,QAAMC,IAEVC,SAAU1B,EAAwBC,MAM1C,OAFApG,KAAKoD,eAAiBf,EAEfA,GAEf,EA9DA,CAA0CqB","file":"rruleByPattern.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rrule\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rrule\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rruleByPattern\"] = factory(require(\"rrule\"));\n\telse\n\t\troot[\"rruleByPattern\"] = factory(root[\"rrule\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import { RRuleSet } from 'rrule'\n\nexport abstract class RRuleSetBuilder {\n    protected rruleSet: RRuleSet\n    protected pattern: Array<0|1>\n    protected count: number\n    private _limit: number | undefined\n\n    constructor(rruleSet: RRuleSet, pattern: Array<0|1>, count: number) {\n        this.rruleSet = rruleSet\n        this.pattern = pattern\n        this.count = count\n    }\n\n    abstract build(): RRuleSet\n\n    protected get limit(): number {\n        if (this._limit) {\n            return this._limit\n        }\n\n        const pattern: Array<number> = this.pattern\n        const countOfOneInPattern = pattern.reduce(\n            (prev, curr) => {return prev + curr}\n        )\n        const limit = Math.floor(\n            this.count * this.pattern.length / countOfOneInPattern\n        )\n\n        this._limit = limit\n\n        return limit\n    }\n\n    protected iterator(): (date: Date, i: number) => boolean {\n        return (date: Date, i:number): boolean => {return i < this.limit}\n    }\n}\n","import { RRuleSet } from 'rrule'\nimport { RRuleSetBuilder } from './rrulesetbuilder'\n\nexport class ReadableRRuleSetBuilder extends RRuleSetBuilder {\n    private builedRRuleSet: RRuleSet | undefined\n\n    public build(): RRuleSet {\n        if (this.builedRRuleSet) {\n            return this.builedRRuleSet\n        }\n\n        const rruleSet = this.rruleSet.clone()\n        const dates = rruleSet.all(this.iterator())\n\n        for (const i in dates) {\n            if (this.pattern[Number(i) % this.pattern.length]) {\n                continue\n            }\n            \n            rruleSet.exdate(dates[i])\n        }\n\n        this.builedRRuleSet = rruleSet\n\n        return rruleSet\n    }\n}\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import { getDayOfYear } from 'date-fns'\nimport { RRule, RRuleSet } from 'rrule'\nimport { RRuleSetBuilder } from './rrulesetbuilder'\n\ninterface Dictionary<T> {\n    [key: string]: T\n}\n\nexport class ShortRRuleSetBuilder extends RRuleSetBuilder {\n    private builedRRuleSet: RRuleSet | undefined\n\n    public build(): RRuleSet {\n        if (this.builedRRuleSet) {\n            return this.builedRRuleSet\n        }\n\n        const rruleSet = new RRuleSet()\n        const dates = this.rruleSet.all(this.iterator())\n        const dayIndexesByYearAndTime: Dictionary<Array<number>> = {}\n\n        for (const i in dates) {\n            if (!this.pattern[Number(i) % this.pattern.length]) {\n                continue\n            }\n\n            const yearAndTime = dates[i].getUTCFullYear()\n                + '&' + dates[i].getUTCHours()\n                + '&' + dates[i].getUTCMinutes()\n                + '&' + dates[i].getUTCSeconds()\n\n            if (!(yearAndTime in dayIndexesByYearAndTime)) {\n                dayIndexesByYearAndTime[yearAndTime] = []\n            }\n\n            dayIndexesByYearAndTime[yearAndTime].push(getDayOfYear(dates[i]))\n        }\n\n        for (const yearAndTime in dayIndexesByYearAndTime) {\n            const [year, hours, minutes, seconds] = yearAndTime.split('&')\n            rruleSet.rrule(new RRule({\n                freq: RRule.YEARLY,\n                dtstart: new Date(\n                    Date.UTC(\n                        Number(year),\n                        0,\n                        1,\n                        Number(hours),\n                        Number(minutes),\n                        Number(seconds))\n                ),\n                until: new Date(\n                    Date.UTC(Number(year), 11, 31, 23, 59, 59, 999)\n                ),\n                byweekday: [\n                    RRule.MO,\n                    RRule.TU,\n                    RRule.WE,\n                    RRule.TH,\n                    RRule.FR,\n                    RRule.SA,\n                    RRule.SU\n                ],\n                bysetpos: dayIndexesByYearAndTime[yearAndTime],\n            }))\n        }\n\n        this.builedRRuleSet = rruleSet\n\n        return rruleSet\n    }\n}\n"],"sourceRoot":""}